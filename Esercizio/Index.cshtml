
@{
    int Somma(int addendo1, int addendo2)
    {
        return addendo1 + addendo2;
    }
}

<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Hello, world!</title>
  </head>
  <body>

      <div>

          <p>
              <strong>
                  1. Dichiarare una variabile valorizzandola con il nostro nome.
                     Stampare questo valore all'interno di un tag h2.
              </strong>
          </p>

          <!-- Svolgimento dell'esercizio -->
        @{
            string nome = "Pinco";
        }

        <h2>@nome</h2>

      </div>
        
      <div>
        <p>
            <strong>
                2. Creare una funzione che prenda due numeri interi e ne restituisca la somma.
                Stampare dentro uno span il risultato.
            </strong>
        </p>

        @{
            var risultatoDellaSomma = Somma(5, 3);
        }

        <span>@risultatoDellaSomma</span>

      </div>

      <div>
        <p>
            <strong>
                3. Creare un array di stringhe contenenti nomi di persona e stampare questo array in pagina.
            </strong>
        </p>

        @{
            var arrayNomi = new string[] { "Luca", "Paolo", "Andrea", "Simone", "Fabio" };
        }

        <ul>
            @for(int i = 0; i < arrayNomi.Length; i++)
            {
                var stampaNome = arrayNomi[i];
                <li>Il nome della persona @(i+1) è: @stampaNome</li>
            }
        </ul>
        

        <ol>
            @foreach(string nomeArray in arrayNomi)
            {
                <li> Il nome della persona è: @nomeArray</li>
            }
        </ol>

      </div>

      <div>
        <p>
            <strong>
                4. Creare una List<int> di 20 numeri interi (generati random da 1 a 100, 1 e 100 inclusi) e mostrare in pagina solo i numeri maggiori di 30
            </strong>
        </p>

        @{
            List<int> listaInteriRandom = new List<int>();

            Random random = new Random();

            for(int i = 0; i < 20; i++)
            {
                int numeroRandom = random.Next(1, 101);
                listaInteriRandom.Add(numeroRandom);
            }
            
            foreach(int numero in listaInteriRandom)
            {
                if(numero > 30)
                {
                    <span>@numero</span>
                }  
            }
        }

       
    </div>
    
    <div>
        <p>
            <strong>
                5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime)
            </strong>
        </p>

        @{
            var dataOraAttuale = DateTime.Now;
        }

        <span>@dataOraAttuale</span>
        <span>@dataOraAttuale.Day / @dataOraAttuale.Month / @dataOraAttuale.Year @dataOraAttuale.Hour : @dataOraAttuale.Minute</span>

    </div>

     <p>
        <strong>
            6. Stampare in pagina la data di domani (usando la classe DateTime)
        </strong>
    </p>

    @{
        DateTime dataDiOggi = DateTime.Now;
        DateTime dataDiDomani = dataDiOggi.AddDays(1);
    }

    <span>@dataDiDomani</span>


    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

  </body>
</html>
